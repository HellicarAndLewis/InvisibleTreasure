//
//  Sequencable.cpp
//  show
//
//  Created by Chris Mullany on 04/09/2015.
//
//

#include "Sequencable.h"

void Sequencable::update() {
    progress = tween.update();
    if (tween.isCompleted()) {
        if (state == INTRO) setState(INTERACTIVE);
        if (state == INTERACTIVE && timeHold > 0) setState(OUTRO);
        if (state == OUTRO) setState(INACTIVE);
    }
}

//////////////////////////////////////////////////////////////////////////////////
// public
//////////////////////////////////////////////////////////////////////////////////
void Sequencable::setState(State state) {
    this->state = state;
    ofNotifyEvent(stateChangeEvent, state, this);
    if (state == INTRO) {
        tween.setParameters(easinglinear,ofxTween::easeOut,0,1,timeIn*1000,0);
    }
    else if (state == INTERACTIVE && timeHold > 0) {
        tween.setParameters(easinglinear,ofxTween::easeOut,0,1,timeHold*1000,0);
    }
    else if (state == OUTRO) {
        tween.setParameters(easinglinear,ofxTween::easeOut,0,1,timeOut*1000,0);
    }
    tween.start();
    progress = 0;
}

void Sequencable::play() {
    setState(INTRO);
}
void Sequencable::stop() {
    setState(OUTRO);
}

//////////////////////////////////////////////////////////////////////////////////
// protected
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// private
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// custom event handlers
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// oF event handlers
//////////////////////////////////////////////////////////////////////////////////

